# Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies with specific flags to reduce memory usage
RUN npm install --production=false --no-audit --no-fund --prefer-offline

# Copy the rest of the application
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production
WORKDIR /app

# Install serve globally
RUN npm install -g serve@14.2.0

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy built files from builder stage
COPY --from=builder /app/build ./build

# Set user
USER appuser

# Expose port and set command
EXPOSE 3000
CMD ["serve", "-s", "build", "-l", "3000"]